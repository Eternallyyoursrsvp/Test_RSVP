{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    // PROGRESSIVE CONSTITUTION: Allow existing patterns while preventing new issues
    
    // TypeScript Progressive Rules - Warn only for NEW violations
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": "warn", 
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/ban-ts-comment": "warn",
    
    // Prevent NEW TypeScript violations - but allow existing baseline
    "@typescript-eslint/no-unsafe-assignment": "warn",
    "@typescript-eslint/no-unsafe-member-access": "warn", 
    "@typescript-eslint/no-unsafe-call": "warn",
    "@typescript-eslint/no-unsafe-return": "warn",
    
    // React Progressive Rules
    "react/react-in-jsx-scope": "off", // Modern React
    "react/prop-types": "warn",
    "react/display-name": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    
    // JavaScript/General Rules - Progressive enforcement
    "no-console": "off", // Allow console for development
    "no-unused-vars": "off", // Handled by TypeScript
    "prefer-const": "warn",
    "no-var": "warn",
    
    // Import/Export Rules
    "no-undef": "off", // TypeScript handles this
    
    // Custom Rules for New Development
    "no-debugger": "warn",
    "no-alert": "warn",
    "eqeqeq": "warn",
    "curly": "warn"
  },
  "overrides": [
    {
      // Stricter rules for NEW files (created after baseline)
      "files": ["**/*.new.{ts,tsx,js,jsx}"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "error",
        "@typescript-eslint/no-unused-vars": "error",
        "react/prop-types": "error"
      }
    },
    {
      // More lenient rules for legacy/existing files
      "files": [
        "server/**/*.{ts,js}",
        "client/src/pages/**/*.{ts,tsx}",
        "client/src/components/**/*.{ts,tsx}"
      ],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/ban-ts-comment": "off",
        "react/prop-types": "off"
      }
    }
  ],
  "ignorePatterns": [
    "dist/**/*",
    "build/**/*", 
    "node_modules/**/*",
    ".git/**/*",
    "coverage/**/*",
    "playwright-report/**/*",
    "test-results/**/*"
  ]
}