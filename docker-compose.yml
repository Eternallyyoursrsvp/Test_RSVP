# Docker Compose for Wedding RSVP Platform
# Local development environment with full stack

version: '3.8'

services:
  # Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: rsvp-platform-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DATABASE_URL=postgresql://rsvp_user:rsvp_password@postgres:5432/rsvp_platform
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development-jwt-secret-minimum-32-characters
      - SESSION_SECRET=development-session-secret
      - AUTH_PROVIDER=jwt-local
      - DB_PROVIDER=postgresql
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - rsvp-network
    volumes:
      - app-logs:/app/logs
      - app-uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rsvp-platform-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=rsvp_platform
      - POSTGRES_USER=rsvp_user
      - POSTGRES_PASSWORD=rsvp_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - rsvp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rsvp_user -d rsvp_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rsvp-platform-redis
    restart: unless-stopped
    command: redis-server --requirepass redis_password --appendonly yes
    environment:
      - REDIS_PASSWORD=redis_password
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - rsvp-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx Reverse Proxy (Optional for local dev)
  nginx:
    image: nginx:alpine
    container_name: rsvp-platform-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - rsvp-network
    profiles:
      - nginx

  # Monitoring Stack (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: rsvp-platform-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rsvp-network
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: rsvp-platform-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - rsvp-network
    profiles:
      - monitoring

# Networks
networks:
  rsvp-network:
    driver: bridge
    name: rsvp-platform-network

# Persistent Volumes
volumes:
  postgres-data:
    name: rsvp-platform-postgres-data
  redis-data:
    name: rsvp-platform-redis-data
  app-logs:
    name: rsvp-platform-app-logs
  app-uploads:
    name: rsvp-platform-app-uploads
  prometheus-data:
    name: rsvp-platform-prometheus-data
  grafana-data:
    name: rsvp-platform-grafana-data